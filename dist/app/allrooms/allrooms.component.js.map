{"version":3,"file":"allrooms.component.js","sourceRoot":"","sources":["../../Applications/MAMP/htdocs/methotels/frontend/tmp/broccoli_type_script_compiler-input_base_path-x5BAaANY.tmp/0/src/app/allrooms/allrooms.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {HttpService} from \"../http.service\";\nimport {FilterkvadraturaPipe} from \"../filterkvadratura.pipe\";\nimport {FilterbrojkrevetaPipe} from \"../filterbrojkreveta.pipe\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-allrooms',\n  templateUrl: 'allrooms.component.html',\n  styleUrls: ['allrooms.component.css'],\n  pipes: [FilterkvadraturaPipe, FilterbrojkrevetaPipe]\n})\nexport class AllroomsComponent implements OnInit {\n\n  chosenRoom:number = 0;\n  room = {\n    roomname : '',\n    beds : 1,\n    size : '',\n    tv : 1\n  };\n  refRoom : any;\n\n  rooms:any[] = [];\n  filterKvadratura:string = '';\n  filterKreveti:number = 1;\n\n  constructor(private httpService:HttpService) {\n  }\n\n  ngOnInit() {\n    this.httpService.allrooms().subscribe(\n      (response) => this.rooms = response['rooms']\n    );\n  }\n\n  select(room : any) {\n    this.chosenRoom = room.ID;\n    this.room.roomname = room.ROOMNAME;\n    this.room.beds = room.BEDS;\n    this.room.size = room.SIZE;\n    this.room.tv = room.TV;\n    this.refRoom = room;\n  }\n\n  modifyRoom() {\n    this.httpService.modifyroom(this.room, this.chosenRoom).subscribe((data) => {\n      console.log(data); this.chosenRoom = 0;\n      this.refRoom.ROOMNAME = this.room.roomname;\n      this.refRoom.BEDS = this.room.beds;\n      this.refRoom.SIZE = this.room.size;\n      this.refRoom.TV = this.room.tv;\n    });\n  }\n\n  deleteRoom(roomId : number) {\n    if(confirm(\"Da li stvarno želite da obrišete tako lepu sobu?\"))\n    {\n      this.httpService.deleteroom(roomId).subscribe((data) => {});\n      delete this.rooms[ this.rooms.find( function(room) { return room.ID == roomId; } ) ];\n    }\n  }\n\n  isValidRoomname() {\n    return this.room.roomname.length >= 3;\n  }\n\n  isValidBeds() {\n    return this.room.beds >= 0;\n  }\n\n  isValidSize() {\n    return this.room.size.length >= 2;\n  }\n\n  isValidTv() {\n    return this.room.tv >= 0 && this.room.tv <= 1;\n  }\n\n  isValidForm() {\n    return this.isValidBeds() && this.isValidRoomname() && this.isValidSize() && this.isValidTv();\n  }\n\n  onClick() {\n    this.modifyRoom();\n  }\n\n}\n"]}