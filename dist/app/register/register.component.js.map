{"version":3,"file":"register.component.js","sourceRoot":"","sources":["../../Applications/MAMP/htdocs/methotels/frontend/tmp/broccoli_type_script_compiler-input_base_path-bPgCeATy.tmp/0/src/app/register/register.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAElD,6BAA0B,iBAAiB,CAAC,CAAA;AAC5C,uBAAqB,iBAAiB,CAAC,CAAA;AASvC;IAaE,2BAAoB,WAAyB,EAAU,MAAe;QAAlD,gBAAW,GAAX,WAAW,CAAc;QAAU,WAAM,GAAN,MAAM,CAAS;QAZtE,UAAK,GAAY,EAAE,CAAC;QAEpB,SAAI,GAAG;YACL,SAAS,EAAG,EAAE;YACd,QAAQ,EAAG,EAAE;YACb,QAAQ,EAAG,EAAE;YACb,KAAK,EAAG,EAAE;YACV,QAAQ,EAAG,EAAE;SACd,CAAC;QAEF,aAAQ,GAAG,EAAE,CAAC;IAE4D,CAAC;IAE3E,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,2CAAe,GAAf;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAe,GAAf;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,2CAAe,GAAf;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,wCAAY,GAAZ;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,uCAAW,GAAX;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IACtI,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAa;QAAtB,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACpC,KAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IA1DH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;SAEtC,CAAC;;yBAAA;IAsDF,wBAAC;AAAD,CAAC,AArDD,IAqDC;AArDY,yBAAiB,oBAqD7B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {NgForm, NgControl} from \"@angular/forms\";\nimport {HttpService} from \"../http.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-register',\n  templateUrl: 'register.component.html',\n  styleUrls: ['register.component.css'],\n  //providers : [HttpService]\n})\nexport class RegisterComponent implements OnInit {\n  token : string = '';\n\n  user = {\n    firstname : '',\n    lastname : '',\n    username : '',\n    email : '',\n    password : ''\n  };\n\n  response = {};\n\n  constructor(private httpService : HttpService, private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  isValidFirstName() {\n    return !(this.user.firstname.length < 5);\n  }\n\n  isValidLastName() {\n    return !(this.user.lastname.length < 5);\n  }\n\n  isValidUsername() {\n    return !(this.user.username.length < 5);\n  }\n\n  isValidPassword() {\n    return !(this.user.password.length < 5);\n  }\n\n  isValidEmail() {\n    return !(this.user.email.length < 5);\n  }\n\n  isValidForm() {\n    return (this.isValidEmail && this.isValidFirstName() && this.isValidLastName() && this.isValidUsername() && this.isValidPassword());\n  }\n\n  onSubmit(form : NgForm) {\n    this.httpService.register(this.user).subscribe(\n      (res) => {\n        this.response = res;\n        this.token = this.response[\"token\"];\n        this.httpService.token = this.response[\"token\"];\n        this.router.navigate(['login']);\n      }\n    );\n  }\n\n}\n"]}